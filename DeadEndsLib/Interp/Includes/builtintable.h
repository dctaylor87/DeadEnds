//
//  interptable.h
//  JustParsing
//
//  Created by Thomas Wetmore on 4/19/23.
//

#ifndef builtintable_h
#define builtintable_h

#include <stdio.h>

extern PValue __add(PNode*, Context*, bool*);
extern PValue __addnode(PNode*, Context*, bool*);
extern PValue __addtoset(PNode*, Context*, bool*);
extern PValue __alpha(PNode*, Context*, bool*);
extern PValue __ancestorset(PNode*, Context*, bool*);
extern PValue __and(PNode*, Context*, bool*);
extern PValue __baptism(PNode*, Context*, bool*);
extern PValue __birth(PNode*, Context*, bool*);
extern PValue __burial(PNode*, Context*, bool*);
extern PValue __capitalize(PNode*, Context*, bool*);
extern PValue __card(PNode*, Context*, bool*);
extern PValue __child(PNode*, Context*, bool*);
extern PValue __children(PNode*, Context*, bool*);  // NEW TO DEADENDS.
extern PValue __childset(PNode*, Context*, bool*);
extern PValue __choosechild(PNode*, Context*, bool*);
extern PValue __choosefam(PNode*, Context*, bool*);
extern PValue __chooseindi(PNode*, Context*, bool*);
extern PValue __choosespouse(PNode*, Context*, bool*);
extern PValue __choosesubset(PNode*, Context*, bool*);
extern PValue __col(PNode*, Context*, bool*);
extern PValue __concat(PNode*, Context*, bool*);
extern PValue __copyfile(PNode*, Context*, bool*);
extern PValue __createnode(PNode*, Context*, bool*);
extern PValue __d(PNode*, Context*, bool*);
extern PValue __database(PNode*, Context*, bool*);
extern PValue __date(PNode*, Context*, bool*);
extern PValue __dateformat(PNode*, Context*, bool*);
extern PValue __dayformat(PNode*, Context*, bool*);
extern PValue __death(PNode*, Context*, bool*);
extern PValue __decr(PNode*, Context*, bool*);
extern PValue __deletefromset(PNode*, Context*, bool*);
extern PValue __deletenode(PNode*, Context*, bool*);
extern PValue __dequeue(PNode*, Context*, bool*);
extern PValue __descendentset(PNode*, Context*, bool*);
extern PValue __difference(PNode*, Context*, bool*);
extern PValue __div(PNode*, Context*, bool*);
extern PValue __empty(PNode*, Context*, bool*);
extern PValue __eq(PNode*, Context*, bool*);
extern PValue __eqstr(PNode*, Context*, bool*);
extern PValue __exp(PNode*, Context*, bool*);
extern PValue __extractdate(PNode*, Context*, bool*);
extern PValue __extractnames(PNode*, Context*, bool*);
extern PValue __extractplaces(PNode*, Context*, bool*);
extern PValue __extracttokens(PNode*, Context*, bool*);
extern PValue __f(PNode*, Context*, bool*);
extern PValue __fam(PNode*, Context*, bool*);
extern PValue __father(PNode*, Context*, bool*);
extern PValue __female(PNode*, Context*, bool*);
extern PValue __firstchild(PNode*, Context*, bool*);
extern PValue __firstfam(PNode*, Context*, bool*);
extern PValue __firstindi(PNode*, Context*, bool*);
extern PValue __fnode(PNode*, Context*, bool*);
extern PValue __freerecord(PNode*, Context*, bool*);
extern PValue __fullname(PNode*, Context*, bool*);
extern PValue __ge(PNode*, Context*, bool*);
extern PValue __gengedcom(PNode*, Context*, bool*);
extern PValue __genindiset(PNode*, Context*, bool*);
extern PValue __getel(PNode*, Context*, bool*);
extern PValue __getfam(PNode*, Context*, bool*);
extern PValue __getindi(PNode*, Context*, bool*);
extern PValue __getindiset(PNode*, Context*, bool*);
extern PValue __getint(PNode*, Context*, bool*);
extern PValue __getrecord(PNode*, Context*, bool*);
extern PValue __getstr(PNode*, Context*, bool*);
extern PValue __gettoday(PNode*, Context*, bool*);
extern PValue __givens(PNode*, Context*, bool*);
extern PValue __gt(PNode*, Context*, bool*);
extern PValue __husband(PNode*, Context*, bool*);
extern PValue __incr(PNode*, Context*, bool*);
extern PValue __index(PNode*, Context*, bool*);
extern PValue __indi(PNode*, Context*, bool*);
extern PValue __indiset(PNode*, Context*, bool*);
extern PValue __inode(PNode*, Context*, bool*);
extern PValue __insert(PNode*, Context*, bool*);
extern PValue __inset(PNode*, Context*, bool*);
extern PValue __intersect(PNode*, Context*, bool*);
extern PValue __key(PNode*, Context*, bool*);
extern PValue __keysort(PNode*, Context*, bool*);
extern PValue __lastchild(PNode*, Context*, bool*);
extern PValue __lastindi(PNode*, Context*, bool*);
extern PValue __le(PNode*, Context*, bool*);
extern PValue __length(PNode*, Context*, bool*);
extern PValue __lengthset(PNode*, Context*, bool*);
extern PValue __linemode(PNode*, Context*, bool*);
extern PValue __list(PNode*, Context*, bool*);
extern PValue __lock(PNode*, Context*, bool*);
extern PValue __long(PNode*, Context*, bool*);
extern PValue __lookup(PNode*, Context*, bool*);
extern PValue __lower(PNode*, Context*, bool*);
extern PValue __lt(PNode*, Context*, bool*);
extern PValue __male(PNode*, Context*, bool*);
extern PValue __marriage(PNode*, Context*, bool*);
extern PValue __menuchoose(PNode*, Context*, bool*);
extern PValue __mod(PNode*, Context*, bool*);
extern PValue __monthformat(PNode*, Context*, bool*);
extern PValue __mother(PNode*, Context*, bool*);
extern PValue __mul(PNode*, Context*, bool*);
extern PValue __name(PNode*, Context*, bool*);
extern PValue __namesort(PNode*, Context*, bool*);
extern PValue __nchildren(PNode*, Context*, bool*);
extern PValue __ne(PNode*, Context*, bool*);
extern PValue __neg(PNode*, Context*, bool*);
extern PValue __newfile(PNode*, Context*, bool*);
extern PValue __nextfam(PNode*, Context*, bool*);
extern PValue __nextindi(PNode*, Context*, bool*);
extern PValue __nextsib(PNode*, Context*, bool*);
extern PValue __nfamilies(PNode*, Context*, bool*);
extern PValue __nl(PNode*, Context*, bool*);
extern PValue __not(PNode*, Context*, bool*);
extern PValue __nspouses(PNode*, Context*, bool*);
extern PValue __or(PNode*, Context*, bool*);
extern PValue __ord(PNode*, Context*, bool*);
extern PValue __outfile(PNode*, Context*, bool*);
extern PValue __pagemode(PNode*, Context*, bool*);
extern PValue __pageout(PNode*, Context*, bool*);
extern PValue __parent(PNode*, Context*, bool*);
extern PValue __parents(PNode*, Context*, bool*);
extern PValue __parentset(PNode*, Context*, bool*);
extern PValue __place(PNode*, Context*, bool*);
extern PValue __pn(PNode*, Context*, bool*);
extern PValue __pop(PNode*, Context*, bool*);
extern PValue __pos(PNode*, Context*, bool*);
extern PValue __prevfam(PNode*, Context*, bool*);
extern PValue __previndi(PNode*, Context*, bool*);
extern PValue __prevsib(PNode*, Context*, bool*);
extern PValue __print(PNode*, Context*, bool*);
extern PValue __push(PNode*, Context*, bool*);
extern PValue __qt(PNode*, Context*, bool*);
extern PValue __reference(PNode*, Context*, bool*);
extern PValue __requeue(PNode*, Context*, bool*);
extern PValue __rjustify(PNode*, Context*, bool*);
extern PValue __roman(PNode*, Context*, bool*);
extern PValue __root(PNode*, Context*, bool*); // New definition in DE.
extern PValue __row(PNode*, Context*, bool*);
extern PValue __save(PNode*, Context*, bool*);
extern PValue __savenode(PNode*, Context*, bool*);
extern PValue __set(PNode*, Context*, bool*);
extern PValue __setel(PNode*, Context*, bool*);
extern PValue __sex(PNode*, Context*, bool*);
extern PValue __short(PNode*, Context*, bool*);
extern PValue __sibling(PNode*, Context*, bool*);
extern PValue __siblingset(PNode*, Context*, bool*);
extern PValue __soundex(PNode*, Context*, bool*);
extern PValue __space(PNode*, Context*, bool*);
extern PValue __spouseset(PNode*, Context*, bool*);
extern PValue __stddate(PNode*, Context*, bool*);
extern PValue __strcmp(PNode*, Context*, bool*);
extern PValue __strlen(PNode*, Context*, bool*);
extern PValue __strsoundex(PNode*, Context*, bool*);
extern PValue __strtoint(PNode*, Context*, bool*);
extern PValue __sub(PNode*, Context*, bool*);
extern PValue __substring(PNode*, Context*, bool*);
extern PValue __surname(PNode*, Context*, bool*);
extern PValue __system(PNode*, Context*, bool*);
extern PValue __table(PNode*, Context*, bool*);
extern PValue __tag(PNode*, Context*, bool*);
extern PValue __title(PNode*, Context*, bool*);
extern PValue __trim(PNode*, Context*, bool*);
extern PValue __trimname(PNode*, Context*, bool*);
extern PValue __union(PNode*, Context*, bool*);
extern PValue __uniqueset(PNode*, Context*, bool*);
extern PValue __unlock(PNode*, Context*, bool*);
extern PValue __upper(PNode*, Context*, bool*);
extern PValue __value(PNode*, Context*, bool*);
extern PValue __valuesort(PNode*, Context*, bool*);
extern PValue __version(PNode*, Context*, bool*);
extern PValue __wife(PNode*, Context*, bool*);
extern PValue __xref(PNode*, Context*, bool*);
extern PValue __year(PNode*, Context*, bool*);

extern PValue __noop(PNode*, Context*, bool*);

#endif /* builtintable_h */
